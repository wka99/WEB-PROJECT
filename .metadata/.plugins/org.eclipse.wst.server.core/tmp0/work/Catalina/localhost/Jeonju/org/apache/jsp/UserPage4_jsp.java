/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.34
 * Generated at: 2018-12-23 11:57:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import bean.postDAO;

public final class UserPage4_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.postDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
request.setCharacterEncoding("utf-8");
      out.write("\r\n");
      out.write("\r\n");
      bean.PostDatabasebean pb = null;
      pb = (bean.PostDatabasebean) _jspx_page_context.getAttribute("pb", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pb == null){
        pb = new bean.PostDatabasebean();
        _jspx_page_context.setAttribute("pb", pb, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("pb"), request);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta content=\"text/html\" charset=\"utf-8\">\r\n");
      out.write("<title>전주 mypage</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/NewFile.css\">\r\n");
      out.write("<script>\r\n");

ResultSet rs=null;
ResultSet rs2=null;
String userEmail=(String)session.getAttribute("userEmail");
if(userEmail==null){

      out.write("\r\n");
      out.write("alert(\"로그인이 필요한 페이지입니다\");\r\n");
      out.write("document.location.href=\"login.jsp\";\r\n");

}
postDAO pd = new postDAO();
int like=0;
int star=0;
String number_like="";
String number_star="";
String sql2="";
String sql3="";
String sql4="select max(likenum) from likes";
String sql5="";
String sql6="";

      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t");

	number_like=request.getParameter("number_like");
	number_star=request.getParameter("number_star");
	sql5="select like_check from likes where postnum="+number_like+" and userEmail='"+userEmail+"'";
	if (number_like!=null){
		rs=pd.getResult(sql5);
		String checked="";
		if(rs.next()){
			checked=rs.getString("like_check");
		}
		rs=pd.getResult(sql4);
		rs.next();
		if(rs.getString("max(likenum)")==null){
			like=0;
			sql3="insert into likes values("+like+","+number_like+",'"+userEmail+"',1)";
			sql2="update post set likes=likes+1 where number='"+number_like+"'";
			pd.upload(sql2);
			pd.upload(sql3);
		}
		else if(checked.equals("1")){
			
      out.write("\r\n");
      out.write("\t\t\talert(\"이미 좋아요를 누른 글입니다.\");\r\n");
      out.write("\t\t\t");

		}
		else{
			like=Integer.parseInt(rs.getString("max(likenum)"))+1;
			sql3="insert into likes values("+like+","+number_like+",'"+userEmail+"',1)";
			sql2="update post set likes=likes+1 where number='"+number_like+"'";
			pd.upload(sql2);
			pd.upload(sql3);
		}
	}
	if (number_star!=null){
		sql2="update post set bookmarks=bookmarks+1 where number='"+number_star+"'";
		pd.upload(sql2);
	}
	
      out.write("\r\n");
      out.write("    $(\"#searchbutton4\").click(function(event){\r\n");
      out.write("    \tvar keyword=$(\".searchtext4\").val();\r\n");
      out.write("    \twindow.location.href=encodeURI(\"UserPage4.jsp?search=\"+keyword);\r\n");
      out.write("    });\r\n");
      out.write("    $('.like').click(function(){\r\n");
      out.write("    \tvar num=$(this).attr(\"id\");\r\n");
      out.write("    \twindow.location.href=encodeURI(\"UserPage4.jsp?number_like=\"+num);\r\n");
      out.write("    });\r\n");
      out.write("    $('.star').click(function(){\r\n");
      out.write("    \tvar num=$(this).attr(\"id\");\r\n");
      out.write("    \twindow.location.href=encodeURI(\"UserPage4.jsp?number_star=\"+num);\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write(" ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "UserPage/header.jsp", out, false);
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "UserPage/UserInfo.jsp", out, false);
      out.write("\r\n");
      out.write("    <section class=\"Userback\">\r\n");
      out.write("    \t<div class=\"title\">\r\n");
      out.write("    \t\t<img class=\"bigMenu\" id=\"내가 즐겨찾기한 지역\" src=\"images/star.png\" width=\"27px\" height=\"27px\"></img>\r\n");
      out.write("    \t\t<b><font size=\"5\">&nbsp;내가 즐겨찾기한 지역</font></b>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t<div align=\"right\">\r\n");
      out.write("    \t\t<button class=\"btn-2\" onClick=\"location.href='##'\">즐겨찾기 수정하기</button>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<select class=\"see_area\">\r\n");
      out.write("    \t\t<option value=\"0\">전체 보기</option>\r\n");
      out.write("    \t\t<option value=\"1\">효자동 1가</option>\r\n");
      out.write("    \t</select>\r\n");
      out.write("    \t<div class=\"searchwindow4\">\r\n");
      out.write("    \t\t<input type=\"text\" class=\"searchtext4\" value=\"\"/>\r\n");
      out.write("    \t\t<button id=\"searchbutton4\" type=\"button\" class=\"search4\">search</button>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t<br><br>\r\n");
      out.write("    \t<div class=\"bookmark_posts\">\r\n");
      out.write("    \t<br>\r\n");
      out.write("    \t<table id=\"bookmark-table\">\r\n");
      out.write("    \t\t<tbody>\r\n");
      out.write("    \t\t<tr>\r\n");
      out.write("\t\t\t\t");

    		String search=request.getParameter("search");
			//나중에 아이디에 해당하는 게시글만 가져오기 위해 세션의 현재 사용자의 아이디를 확인하고 이와 일치하는
			//게시글 만을 가져오도록 sql 조정할것!!
			int count=0;
			
			String sql="";
			if (search==null){
				sql="select * from post";
			}
			else{
			    sql="select * from post where (content like '%"+search+"%' or title like'%"+search+"%')";
			}
			rs=pd.getResult(sql);
			while(rs.next()){
				count++;
				if (count%3!=1&&count!=1){
					String img="http://localhost:8080/Jeonju/UploadFile/"+rs.getString("picture1");
    		
      out.write("\r\n");
      out.write("\t\t\t\t<td><div class=\"table_content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"userID\" align=\"left\" style=\"font-size:14px;\"><b>");
      out.print(rs.getString("id") );
      out.write("</b></div>\r\n");
      out.write("\t\t\t\t\t<img src=");
      out.print(img );
      out.write(" width=\"240px\" height=\"180px\"><br>\r\n");
      out.write("\t\t\t\t\t<div class=\"title\"style=\"font-size:13px;\"><a href=\"postContentPage.jsp?number=");
      out.print(rs.getString("number"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("title") );
      out.write("</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"buttons\">\r\n");
      out.write("\t\t\t\t\t<button class=\"like\" id=\"");
      out.print(rs.getString("number") );
      out.write("\" name=\"like\" ><img width=\"15px\" src=\"images/thumb-up-button.png\"></button>\r\n");
      out.write("\t\t\t\t\t");
      out.print(rs.getString("likes") );
      out.write("\r\n");
      out.write("\t\t\t\t\t<button class=\"star\" id=\"");
      out.print(rs.getString("number") );
      out.write("\" name=\"star\"><img width=\"15px\" src=\"images/star.png\"></button>\r\n");
      out.write("\t\t\t\t\t");
      out.print(rs.getString("bookmarks") );
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"content\"style=\"font-size:13px;\">\r\n");
      out.write("\t\t\t\t\t");

						String c=rs.getString("content");
						if (c.length()>30)//30자 이상이면 생략되도록
							c=c.substring(0,30)+"...";
						out.print(c);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div></td>\t\t\t\t\t\t\t\t\r\n");
      out.write("    \t\t\t");

    				}
    				else if(count%3==1){
    					String img="http://localhost:8080/Jeonju/UploadFile/"+rs.getString("picture1");
    				
      out.write("\r\n");
      out.write("    \t\t\t\t</tr>\r\n");
      out.write("    \t\t\t\t<tr>\r\n");
      out.write("\t    \t\t\t\t<td><div class=\"table_content\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"userID\" align=\"left\" style=\"font-size:14px;\"><b>");
      out.print(rs.getString("id") );
      out.write("</b></div>\r\n");
      out.write("\t\t\t\t\t\t<img src=");
      out.print(img );
      out.write(" width=\"240px\" height=\"180px\"><br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"title\"style=\"font-size:13px;\"><a href=\"postContentPage.jsp?number=");
      out.print(rs.getString("number"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("title") );
      out.write("</a></div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"buttons\" id=\"");
      out.print(rs.getString("id") );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<button id=\"");
      out.print(rs.getString("number") );
      out.write("\" class=\"like\" name=\"like\"><img width=\"15px\" src=\"images/thumb-up-button.png\"></button>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(rs.getString("likes") );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button id=\"");
      out.print(rs.getString("number") );
      out.write("\" class=\"star\" name=\"star\"><img width=\"15px\" src=\"images/star.png\"></button>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(rs.getString("bookmarks") );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"content\" style=\"font-size:13px;\">\r\n");
      out.write("\t\t\t\t\t\t");

							String c=rs.getString("content"); 
							if (c.length()>30)//30자 이상이면 생략되도록
								c=c.substring(0,30)+"...";
							out.print(c);
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div></td>\r\n");
      out.write("    \t\t\t");

    				}
    			}
    			
      out.write("\t\r\n");
      out.write("    \t\t</tr>\r\n");
      out.write("    \t\t</tbody>\r\n");
      out.write("    \t</table>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    </section>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
